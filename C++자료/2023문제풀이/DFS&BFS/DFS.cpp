#include<iostream>
#include<vector>
/*
DFS(Depth First Search) 깊이 우선 탐색

-그래프를 탐색하는 방법중 하나
-시작점부터 다음 branch로 넘어가기 전에 해당 branch를 완벽하게 탐색하고 넘어 가는 방법
<재귀함수>나 <스택>으로 구현

구현
1. 탐색 시작 노드를 스택에 삽입하고 방문 처리
2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면 그 노드를 스택에 넣고 방문처리
   방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼낸다
3. 2번의 과정을 수행할 수 없을 때까지 반복

<point>
-노드 방문 시 방문(visited) 여부를 반드시 검사해야한다. 아니면 무한 루프에 빠질 수 있음.
-탐색 과정이 노드에서 한없이 깊이 진행되는 것을 막기 위해 깊이 제한(depth bound)를 사용.
-깊이 제한에 도달할 때까지 목표노드가 발견되지 않으면 최근에 첨가된 노드의 부모노드로 돌아와서(백트래킹-backtracking), 부모노드에
이전과는 다른 동작자를 적용하여 새로운 자식노드를 생성.
*/
using namespace std;

int main(){

    return ;
}